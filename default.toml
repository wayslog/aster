[[clusters]]
    name = "test-redis-standalone"
    listen_addr = "0.0.0.0:7787"
    hash_tag = "{}"
    cache_type = "redis"
    servers = [
        "127.0.0.1:6379:10 redis-1",
    ]
    thread = 1
    fetch_interval = 3600000 
    read_from_slave = false

    ping_fail_limit = 10
    ping_interval = 30000

    read_timeout = 1000
    write_timeout = 1000
    dial_timeout = 500
    listen_proto = "tcp"
    node_connections = 1
    # 旧版简单密码写法，等价于 auth = { users = [{ username = "default", password = "example" }] }
    password = "example-frontend-secret"
    # 后端 ACL：此处演示用户名 + 密码；如果后端是简单密码，可直接使用 backend_password
    backend_auth = { username = "proxy", password = "example-backend-secret" }
    # 慢查询日志阈值（微秒）；默认 10000，设置为 -1 以关闭记录
    slowlog_log_slower_than = 10000
    # 慢查询日志最大保留条数；默认 128
    slowlog_max_len = 128

[[clusters]]
    name = "test-cluster"
    listen_addr = "0.0.0.0:7788"
    hash_tag = "{}"
    thread = 1
    cache_type = "redis_cluster"
    servers = ["127.0.0.1:3300"]

    fetch_interval = 1800000 # 1800s , 30 minutes
    fetch_since_latest_cmd = 1000 # 3600s , 1 hour
    read_from_slave = false

    ping_fail_limit = 10
    ping_interval = 300

    read_timeout = 1000
    write_timeout = 1000
    dial_timeout = 500
    listen_proto = "tcp"
    node_connections = 1
    # 更复杂的 ACL 配置，支持多个前端用户（default 用户必须显式配置密码）
    auth = { password = "cluster-default-secret", users = [
        { username = "ops", password = "ops-secret" },
        { username = "audit", password = "audit-secret" },
    ] }
    # 旧版写法依然兼容：backend_password = "raw-secret"
    backend_password = "cluster-backend-secret"
    # 慢查询日志阈值（微秒）；默认 10000，设置为 -1 以关闭记录
    slowlog_log_slower_than = 10000
    # 慢查询日志最大保留条数；默认 128
    slowlog_max_len = 128
